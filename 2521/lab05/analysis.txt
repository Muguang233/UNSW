
NOTE:
- Your time complexities should be expressed in big-O notation and be in
  terms of n, where n is the number of people who  have  been  added  to
  Friendbook.

===============
   FbFriend
===============

- Worst case time complexity: O(n)

- Explanation: since I call the function nameToID(), inAdjList will be called, the worst case will be traverse through the whole map of id

===============
 FbNumFriends
===============

- Worst case time complexity: O(n)

- Explanation: same as the previous one

===============
FbMutualFriends
===============

- Worst case time complexity: O(n)

- Explanation: the worst will be when all the degrees of Person A and B pointing to a same friend

===============
 FbFriendRecs1
===============

- Worst case time complexity: O(...)

- Explanation: ...

